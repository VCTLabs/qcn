# Makefile.in generated by automake 1.13.3 from Makefile.am.
# client/main/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/qcn
pkgincludedir = $(includedir)/qcn
pkglibdir = $(libdir)/qcn
pkglibexecdir = $(libexecdir)/qcn
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = arm-unknown-linux-gnu
target_triplet = arm-unknown-linux-gnu
DIST_COMMON = $(top_srcdir)/Makefile.incl $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(top_srcdir)/depcomp
#am__append_1 = -bind_at_load -framework IOKit \
#	-framework Foundation -framework ScreenSaver \
#	-framework Carbon -framework Cocoa \
#	 -ldl $(BOINC_LIB)
am__append_2 = -z lazy -ldl $(BOINC_LIB) -lphidget21 -lusb-1.0 -lrt 
bin_PROGRAMS = qcn$(EXEEXT) qcndemo$(EXEEXT)
subdir = client/main
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__qcn_SOURCES_DIST = $(UTILDIR)/sac.cpp $(UTILDIR)/qcn_thread.cpp \
	$(UTILDIR)/trickleup.cpp $(UTILDIR)/trickledown.cpp \
	$(UTILDIR)/md5.cpp $(UTILDIR)/execproc.cpp \
	$(UTILDIR)/qcn_util.cpp $(UTILDIR)/qcn_signal.cpp \
	$(UTILDIR)/cserialize.cpp $(UTILDIR)/gzstream.cpp \
	$(MAINDIR)/qcn_shmem.cpp $(SENSORDIR)/csensor.cpp \
	$(QCNUSBDIR)/qcn_shmem_usb.cpp \
	$(MAINDIR)/qcn_thread_sensor.cpp \
	$(MAINDIR)/qcn_thread_sensor_util.cpp \
	$(MAINDIR)/qcn_thread_sensor_loop.cpp \
	$(MAINDIR)/qcn_thread_time.cpp $(MAINDIR)/main.cpp
am__objects_1 =
am__objects_2 =
#am__objects_2 = qcn-csensor_mac_laptop.$(OBJEXT) \
#	qcn-csensor_mac_usb_generic.$(OBJEXT) \
#	qcn-csensor_mac_usb_jw.$(OBJEXT) \
#	qcn-csensor_usb_phidgets.$(OBJEXT)
am_qcn_OBJECTS = qcn-sac.$(OBJEXT) qcn-qcn_thread.$(OBJEXT) \
	qcn-trickleup.$(OBJEXT) qcn-trickledown.$(OBJEXT) \
	qcn-md5.$(OBJEXT) qcn-execproc.$(OBJEXT) \
	qcn-qcn_util.$(OBJEXT) qcn-qcn_signal.$(OBJEXT) \
	qcn-cserialize.$(OBJEXT) qcn-gzstream.$(OBJEXT) \
	qcn-qcn_shmem.$(OBJEXT) qcn-csensor.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2) qcn-qcn_shmem_usb.$(OBJEXT) \
	qcn-qcn_thread_sensor.$(OBJEXT) \
	qcn-qcn_thread_sensor_util.$(OBJEXT) \
	qcn-qcn_thread_sensor_loop.$(OBJEXT) \
	qcn-qcn_thread_time.$(OBJEXT) qcn-main.$(OBJEXT)
qcn_OBJECTS = $(am_qcn_OBJECTS)
qcn_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(qcn_LDFLAGS) \
	$(LDFLAGS) -o $@
am_qcndemo_OBJECTS = qcndemo-qcn_thread.$(OBJEXT) \
	qcndemo-qcn_util.$(OBJEXT) qcndemo-qcn_signal.$(OBJEXT) \
	qcndemo-cserialize.$(OBJEXT) qcndemo-gzstream.$(OBJEXT) \
	qcndemo-md5.$(OBJEXT) qcndemo-qcn_shmem.$(OBJEXT) \
	qcndemo-qcndemo.$(OBJEXT)
qcndemo_OBJECTS = $(am_qcndemo_OBJECTS)
am__DEPENDENCIES_1 =
qcndemo_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(qcndemo_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(qcn_SOURCES) $(qcndemo_SOURCES)
DIST_SOURCES = $(am__qcn_SOURCES_DIST) $(qcndemo_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = aclocal-1.13
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.13
AWK = gawk
CC = arm-linux-androideabi-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = --sysroot=/home/carlgt1/androidarm-tc/sysroot -DANDROID -DDECLARE_TIMEZONE -Wall -I/home/carlgt1/androidarm-tc/arm-linux-androideabi/include -I../boinc/samples/jpeglib -O3 -fomit-frame-pointer
CLIENTGUIFLAGS = 
CLIENTGUILIBS = 
CLIENTLIBS = 
CLIENT_BIN_FILENAME = qcn
CLIENT_GUI_BIN_FILENAME = qcn_graphics
CPP = arm-linux-androideabi-gcc -E
CPPFLAGS = 
CXX = arm-linux-androideabi-g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = --sysroot=/home/carlgt1/androidarm-tc/sysroot -DANDROID -Wall -I/home/carlgt1/androidarm-tc/arm-linux-androideabi/include -funroll-loops -fexceptions -O3 -fomit-frame-pointer
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOCBOOK2X_MAN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = -L/home/carlgt1/androidarm-tc/sysroot/usr/lib -L/home/carlgt1/androidarm-tc/arm-linux-androideabi/lib -llog
LIBOBJS = 
LIBS =   $(am__append_1) $(am__append_2)
LTLIBOBJS = 
MAINT = #
MAKEINFO = makeinfo
MKDIR_P = /bin/mkdir -p
OBJC = arm-linux-androideabi-gcc
OBJCDEPMODE = depmode=none
OBJCFLAGS = -ObjC
OBJEXT = o
PACKAGE = qcn
PACKAGE_BUGREPORT = 
PACKAGE_NAME = QCN
PACKAGE_STRING = QCN 7.36
PACKAGE_TARNAME = qcn
PACKAGE_URL = 
PACKAGE_VERSION = 7.36
PATH_SEPARATOR = :
PICFLAGS = 
QCN_MAJOR_VERSION = 7
QCN_MINOR_VERSION = 36
QCN_RELEASE = 
QCN_VERSION_STRING = 7.36
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
TOP_BUILD_DIR = /home/carlgt1/projects/qcn
TOP_SOURCE_DIR = /home/carlgt1/projects/qcn
VERSION = 7.36
abs_builddir = /home/carlgt1/projects/qcn/client/main
abs_srcdir = /home/carlgt1/projects/qcn/client/main
abs_top_builddir = /home/carlgt1/projects/qcn
abs_top_srcdir = /home/carlgt1/projects/qcn
ac_ct_CC = 
ac_ct_CXX = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = arm-unknown-linux-gnu
host_alias = arm-linux
host_cpu = arm
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/carlgt1/projects/qcn/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = arm-unknown-linux-gnu
target_alias = 
target_cpu = arm
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
BASEDIR = $(top_builddir)

#if ($(IS_I386)
#   BOINC_DIR = $(BASEDIR)/../boinc/mac_build/build/`uname -p`_Deployment
#else
#   BOINC_DIR = $(BASEDIR)/../boinc/mac_build/build/`uname -p`_Deployment
#endif
LIBDIR = $(top_builddir)/client/linux_build
BOINC_BASEDIR = $(top_builddir)/../boinc
BOINC_DIR = $(BOINC_BASEDIR)
FTGL_DIR = $(top_builddir)/ftgl-2.1.3
FREETYPE_DIR = $(top_builddir)/freetype-2.4.6
ZLIB_DIR = $(top_builddir)/zlib-1.2.5
CURL_DIR = $(top_builddir)/curl-7.25.0

#if OS_DARWIN
#   BOINC_LIB_DIR = $(BOINC_BASEDIR)/mac_build/build/Deployment
#   BOINC_LIB = -L$(BOINC_LIB_DIR) -lboinc -lboinc_api -lboinc_graphics2 -L$(BOINC_BASEDIR)/zip/build/Release -lboinc_zip
#else
#   BOINC_LIB = $(BOINC_DIR)/api/libboinc_api.a $(BOINC_DIR)/api/libboinc_graphics2.a $(BOINC_DIR)/lib/libboinc.a $(BOINC_DIR)/zip/libboinc_zip.a
BOINC_LIB = -L$(LIBDIR) -lboinc_api -lboinc_graphics2 -lboinc -lboinc_zip
#endif

#ZIPARCH_DIR = $(BASEDIR)/ziparchive/ZipArchive
#BOINC_LIB = -L$(BOINC_DIR)/api -lboinc_api -lboinc_graphics2 -L$(BOINC_DIR)/lib -lboinc -L$(ZIPARCH_DIR) -lziparch
UTILDIR = $(BASEDIR)/client/util
MAINDIR = $(BASEDIR)/client/main
SENSORDIR = $(BASEDIR)/client/sensor
GRAPHICSDIR = $(BASEDIR)/client/graphics
#PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
AM_CPPFLAGS = \
        -Wall \
        -DQCN -D_THREAD_SAFE -D_ZLIB \
        -O2 \
        -I$(BASEDIR) \
        -I$(MAINDIR) \
        -I$(SENSORDIR) \
        -I$(UTILDIR) \
        -I$(FTGL_DIR)/include \
        -I$(FREETYPE_DIR)/include \
        -I$(ZLIB_DIR) \
        -I$(CURL_DIR)/include \
        -I$(BOINC_DIR)/lib \
        -I$(BOINC_DIR)/api \
        -I$(BOINC_DIR)/zip \
        -I$(BOINC_DIR)/samples/jpeglib \
        -I$(GRAPHICSDIR) 

#-I$(ZIPARCH_DIR) 
AM_LDFLAGS = -L$(UTILDIR) -L$(LIBDIR)
BINARY = qcn_$(QCN_VERSION_STRING)_$(build)
QCNUSBDIR = $(BASEDIR)/client/qcnusb
#STACKSIZE = --stack=2000000
#STACKSIZE = -Wl,-stack_size -Wl,2000000
GRAPHICS = $(UTILDIR)/texture.cpp
#GRAPHICS = 
SENSORS = 

#SENSORS = \
#           $(SENSORDIR)/csensor_mac_laptop.cpp \
#           $(SENSORDIR)/csensor_mac_usb_generic.cpp \
#           $(SENSORDIR)/csensor_mac_usb_jw.cpp \
#           $(SENSORDIR)/csensor_usb_phidgets.cpp 

qcn_SOURCES = \
           $(UTILDIR)/sac.cpp \
           $(UTILDIR)/qcn_thread.cpp \
           $(UTILDIR)/trickleup.cpp \
           $(UTILDIR)/trickledown.cpp \
           $(UTILDIR)/md5.cpp \
           $(UTILDIR)/execproc.cpp \
           $(UTILDIR)/qcn_util.cpp \
           $(UTILDIR)/qcn_signal.cpp \
           $(UTILDIR)/cserialize.cpp \
           $(UTILDIR)/gzstream.cpp \
           $(MAINDIR)/qcn_shmem.cpp \
           $(SENSORDIR)/csensor.cpp \
           $(GRAPHICS) \
           $(SENSORS) \
           $(QCNUSBDIR)/qcn_shmem_usb.cpp \
           $(MAINDIR)/qcn_thread_sensor.cpp \
           $(MAINDIR)/qcn_thread_sensor_util.cpp \
           $(MAINDIR)/qcn_thread_sensor_loop.cpp \
           $(MAINDIR)/qcn_thread_time.cpp \
           $(MAINDIR)/main.cpp

qcn_DEPENDENCIES = 
#qcn_CFLAGS = -I$(NTPINCLUDEDIR) -I$(NTPDATEDIR) $(AM_CPPFLAGS) $(PTHREAD_CFLAGS)
qcn_CPPFLAGS = -D_USE_NTPDATE_EXEC_ -I$(QCNUSBDIR) $(AM_CPPFLAGS) $(PTHREAD_CFLAGS)
#qcn_CPPFLAGS = -I$(QCNUSBDIR) $(AM_CPPFLAGS) $(PTHREAD_CFLAGS)
qcn_LDFLAGS = $(LIBS) $(AM_LDFLAGS) -lstdc++ $(STACKSIZE) $(PTHREAD_LIBS)
qcn_LDADD = 
qcndemo_SOURCES = \
           $(UTILDIR)/qcn_thread.cpp \
           $(UTILDIR)/qcn_util.cpp \
           $(UTILDIR)/qcn_signal.cpp \
           $(UTILDIR)/cserialize.cpp \
           $(UTILDIR)/gzstream.cpp \
           $(UTILDIR)/md5.cpp \
           $(MAINDIR)/qcn_shmem.cpp \
           $(MAINDIR)/qcndemo.cpp

qcndemo_DEPENDENCIES = 
qcndemo_CPPFLAGS = -DQCNDEMO $(qcn_CPPFLAGS)
qcndemo_LDFLAGS = $(qcn_LDFLAGS)
qcndemo_LDADD = $(qcn_LDADD)
qcndir = $(BASEDIR)/bin
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/Makefile.incl $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu client/main/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu client/main/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.incl:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

qcn$(EXEEXT): $(qcn_OBJECTS) $(qcn_DEPENDENCIES) $(EXTRA_qcn_DEPENDENCIES) 
	@rm -f qcn$(EXEEXT)
	$(AM_V_CXXLD)$(qcn_LINK) $(qcn_OBJECTS) $(qcn_LDADD) $(LIBS)

qcndemo$(EXEEXT): $(qcndemo_OBJECTS) $(qcndemo_DEPENDENCIES) $(EXTRA_qcndemo_DEPENDENCIES) 
	@rm -f qcndemo$(EXEEXT)
	$(AM_V_CXXLD)$(qcndemo_LINK) $(qcndemo_OBJECTS) $(qcndemo_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/qcn-csensor.Po
include ./$(DEPDIR)/qcn-cserialize.Po
include ./$(DEPDIR)/qcn-execproc.Po
include ./$(DEPDIR)/qcn-gzstream.Po
include ./$(DEPDIR)/qcn-main.Po
include ./$(DEPDIR)/qcn-md5.Po
include ./$(DEPDIR)/qcn-qcn_shmem.Po
include ./$(DEPDIR)/qcn-qcn_shmem_usb.Po
include ./$(DEPDIR)/qcn-qcn_signal.Po
include ./$(DEPDIR)/qcn-qcn_thread.Po
include ./$(DEPDIR)/qcn-qcn_thread_sensor.Po
include ./$(DEPDIR)/qcn-qcn_thread_sensor_loop.Po
include ./$(DEPDIR)/qcn-qcn_thread_sensor_util.Po
include ./$(DEPDIR)/qcn-qcn_thread_time.Po
include ./$(DEPDIR)/qcn-qcn_util.Po
include ./$(DEPDIR)/qcn-sac.Po
include ./$(DEPDIR)/qcn-texture.Po
include ./$(DEPDIR)/qcn-trickledown.Po
include ./$(DEPDIR)/qcn-trickleup.Po
include ./$(DEPDIR)/qcndemo-cserialize.Po
include ./$(DEPDIR)/qcndemo-gzstream.Po
include ./$(DEPDIR)/qcndemo-md5.Po
include ./$(DEPDIR)/qcndemo-qcn_shmem.Po
include ./$(DEPDIR)/qcndemo-qcn_signal.Po
include ./$(DEPDIR)/qcndemo-qcn_thread.Po
include ./$(DEPDIR)/qcndemo-qcn_util.Po
include ./$(DEPDIR)/qcndemo-qcndemo.Po

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

qcn-sac.o: $(UTILDIR)/sac.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-sac.o -MD -MP -MF $(DEPDIR)/qcn-sac.Tpo -c -o qcn-sac.o `test -f '$(UTILDIR)/sac.cpp' || echo '$(srcdir)/'`$(UTILDIR)/sac.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-sac.Tpo $(DEPDIR)/qcn-sac.Po
#	$(AM_V_CXX)source='$(UTILDIR)/sac.cpp' object='qcn-sac.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-sac.o `test -f '$(UTILDIR)/sac.cpp' || echo '$(srcdir)/'`$(UTILDIR)/sac.cpp

qcn-sac.obj: $(UTILDIR)/sac.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-sac.obj -MD -MP -MF $(DEPDIR)/qcn-sac.Tpo -c -o qcn-sac.obj `if test -f '$(UTILDIR)/sac.cpp'; then $(CYGPATH_W) '$(UTILDIR)/sac.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/sac.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-sac.Tpo $(DEPDIR)/qcn-sac.Po
#	$(AM_V_CXX)source='$(UTILDIR)/sac.cpp' object='qcn-sac.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-sac.obj `if test -f '$(UTILDIR)/sac.cpp'; then $(CYGPATH_W) '$(UTILDIR)/sac.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/sac.cpp'; fi`

qcn-qcn_thread.o: $(UTILDIR)/qcn_thread.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-qcn_thread.o -MD -MP -MF $(DEPDIR)/qcn-qcn_thread.Tpo -c -o qcn-qcn_thread.o `test -f '$(UTILDIR)/qcn_thread.cpp' || echo '$(srcdir)/'`$(UTILDIR)/qcn_thread.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-qcn_thread.Tpo $(DEPDIR)/qcn-qcn_thread.Po
#	$(AM_V_CXX)source='$(UTILDIR)/qcn_thread.cpp' object='qcn-qcn_thread.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-qcn_thread.o `test -f '$(UTILDIR)/qcn_thread.cpp' || echo '$(srcdir)/'`$(UTILDIR)/qcn_thread.cpp

qcn-qcn_thread.obj: $(UTILDIR)/qcn_thread.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-qcn_thread.obj -MD -MP -MF $(DEPDIR)/qcn-qcn_thread.Tpo -c -o qcn-qcn_thread.obj `if test -f '$(UTILDIR)/qcn_thread.cpp'; then $(CYGPATH_W) '$(UTILDIR)/qcn_thread.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/qcn_thread.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-qcn_thread.Tpo $(DEPDIR)/qcn-qcn_thread.Po
#	$(AM_V_CXX)source='$(UTILDIR)/qcn_thread.cpp' object='qcn-qcn_thread.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-qcn_thread.obj `if test -f '$(UTILDIR)/qcn_thread.cpp'; then $(CYGPATH_W) '$(UTILDIR)/qcn_thread.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/qcn_thread.cpp'; fi`

qcn-trickleup.o: $(UTILDIR)/trickleup.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-trickleup.o -MD -MP -MF $(DEPDIR)/qcn-trickleup.Tpo -c -o qcn-trickleup.o `test -f '$(UTILDIR)/trickleup.cpp' || echo '$(srcdir)/'`$(UTILDIR)/trickleup.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-trickleup.Tpo $(DEPDIR)/qcn-trickleup.Po
#	$(AM_V_CXX)source='$(UTILDIR)/trickleup.cpp' object='qcn-trickleup.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-trickleup.o `test -f '$(UTILDIR)/trickleup.cpp' || echo '$(srcdir)/'`$(UTILDIR)/trickleup.cpp

qcn-trickleup.obj: $(UTILDIR)/trickleup.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-trickleup.obj -MD -MP -MF $(DEPDIR)/qcn-trickleup.Tpo -c -o qcn-trickleup.obj `if test -f '$(UTILDIR)/trickleup.cpp'; then $(CYGPATH_W) '$(UTILDIR)/trickleup.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/trickleup.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-trickleup.Tpo $(DEPDIR)/qcn-trickleup.Po
#	$(AM_V_CXX)source='$(UTILDIR)/trickleup.cpp' object='qcn-trickleup.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-trickleup.obj `if test -f '$(UTILDIR)/trickleup.cpp'; then $(CYGPATH_W) '$(UTILDIR)/trickleup.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/trickleup.cpp'; fi`

qcn-trickledown.o: $(UTILDIR)/trickledown.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-trickledown.o -MD -MP -MF $(DEPDIR)/qcn-trickledown.Tpo -c -o qcn-trickledown.o `test -f '$(UTILDIR)/trickledown.cpp' || echo '$(srcdir)/'`$(UTILDIR)/trickledown.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-trickledown.Tpo $(DEPDIR)/qcn-trickledown.Po
#	$(AM_V_CXX)source='$(UTILDIR)/trickledown.cpp' object='qcn-trickledown.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-trickledown.o `test -f '$(UTILDIR)/trickledown.cpp' || echo '$(srcdir)/'`$(UTILDIR)/trickledown.cpp

qcn-trickledown.obj: $(UTILDIR)/trickledown.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-trickledown.obj -MD -MP -MF $(DEPDIR)/qcn-trickledown.Tpo -c -o qcn-trickledown.obj `if test -f '$(UTILDIR)/trickledown.cpp'; then $(CYGPATH_W) '$(UTILDIR)/trickledown.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/trickledown.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-trickledown.Tpo $(DEPDIR)/qcn-trickledown.Po
#	$(AM_V_CXX)source='$(UTILDIR)/trickledown.cpp' object='qcn-trickledown.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-trickledown.obj `if test -f '$(UTILDIR)/trickledown.cpp'; then $(CYGPATH_W) '$(UTILDIR)/trickledown.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/trickledown.cpp'; fi`

qcn-md5.o: $(UTILDIR)/md5.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-md5.o -MD -MP -MF $(DEPDIR)/qcn-md5.Tpo -c -o qcn-md5.o `test -f '$(UTILDIR)/md5.cpp' || echo '$(srcdir)/'`$(UTILDIR)/md5.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-md5.Tpo $(DEPDIR)/qcn-md5.Po
#	$(AM_V_CXX)source='$(UTILDIR)/md5.cpp' object='qcn-md5.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-md5.o `test -f '$(UTILDIR)/md5.cpp' || echo '$(srcdir)/'`$(UTILDIR)/md5.cpp

qcn-md5.obj: $(UTILDIR)/md5.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-md5.obj -MD -MP -MF $(DEPDIR)/qcn-md5.Tpo -c -o qcn-md5.obj `if test -f '$(UTILDIR)/md5.cpp'; then $(CYGPATH_W) '$(UTILDIR)/md5.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/md5.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-md5.Tpo $(DEPDIR)/qcn-md5.Po
#	$(AM_V_CXX)source='$(UTILDIR)/md5.cpp' object='qcn-md5.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-md5.obj `if test -f '$(UTILDIR)/md5.cpp'; then $(CYGPATH_W) '$(UTILDIR)/md5.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/md5.cpp'; fi`

qcn-execproc.o: $(UTILDIR)/execproc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-execproc.o -MD -MP -MF $(DEPDIR)/qcn-execproc.Tpo -c -o qcn-execproc.o `test -f '$(UTILDIR)/execproc.cpp' || echo '$(srcdir)/'`$(UTILDIR)/execproc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-execproc.Tpo $(DEPDIR)/qcn-execproc.Po
#	$(AM_V_CXX)source='$(UTILDIR)/execproc.cpp' object='qcn-execproc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-execproc.o `test -f '$(UTILDIR)/execproc.cpp' || echo '$(srcdir)/'`$(UTILDIR)/execproc.cpp

qcn-execproc.obj: $(UTILDIR)/execproc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-execproc.obj -MD -MP -MF $(DEPDIR)/qcn-execproc.Tpo -c -o qcn-execproc.obj `if test -f '$(UTILDIR)/execproc.cpp'; then $(CYGPATH_W) '$(UTILDIR)/execproc.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/execproc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-execproc.Tpo $(DEPDIR)/qcn-execproc.Po
#	$(AM_V_CXX)source='$(UTILDIR)/execproc.cpp' object='qcn-execproc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-execproc.obj `if test -f '$(UTILDIR)/execproc.cpp'; then $(CYGPATH_W) '$(UTILDIR)/execproc.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/execproc.cpp'; fi`

qcn-qcn_util.o: $(UTILDIR)/qcn_util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-qcn_util.o -MD -MP -MF $(DEPDIR)/qcn-qcn_util.Tpo -c -o qcn-qcn_util.o `test -f '$(UTILDIR)/qcn_util.cpp' || echo '$(srcdir)/'`$(UTILDIR)/qcn_util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-qcn_util.Tpo $(DEPDIR)/qcn-qcn_util.Po
#	$(AM_V_CXX)source='$(UTILDIR)/qcn_util.cpp' object='qcn-qcn_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-qcn_util.o `test -f '$(UTILDIR)/qcn_util.cpp' || echo '$(srcdir)/'`$(UTILDIR)/qcn_util.cpp

qcn-qcn_util.obj: $(UTILDIR)/qcn_util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-qcn_util.obj -MD -MP -MF $(DEPDIR)/qcn-qcn_util.Tpo -c -o qcn-qcn_util.obj `if test -f '$(UTILDIR)/qcn_util.cpp'; then $(CYGPATH_W) '$(UTILDIR)/qcn_util.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/qcn_util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-qcn_util.Tpo $(DEPDIR)/qcn-qcn_util.Po
#	$(AM_V_CXX)source='$(UTILDIR)/qcn_util.cpp' object='qcn-qcn_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-qcn_util.obj `if test -f '$(UTILDIR)/qcn_util.cpp'; then $(CYGPATH_W) '$(UTILDIR)/qcn_util.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/qcn_util.cpp'; fi`

qcn-qcn_signal.o: $(UTILDIR)/qcn_signal.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-qcn_signal.o -MD -MP -MF $(DEPDIR)/qcn-qcn_signal.Tpo -c -o qcn-qcn_signal.o `test -f '$(UTILDIR)/qcn_signal.cpp' || echo '$(srcdir)/'`$(UTILDIR)/qcn_signal.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-qcn_signal.Tpo $(DEPDIR)/qcn-qcn_signal.Po
#	$(AM_V_CXX)source='$(UTILDIR)/qcn_signal.cpp' object='qcn-qcn_signal.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-qcn_signal.o `test -f '$(UTILDIR)/qcn_signal.cpp' || echo '$(srcdir)/'`$(UTILDIR)/qcn_signal.cpp

qcn-qcn_signal.obj: $(UTILDIR)/qcn_signal.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-qcn_signal.obj -MD -MP -MF $(DEPDIR)/qcn-qcn_signal.Tpo -c -o qcn-qcn_signal.obj `if test -f '$(UTILDIR)/qcn_signal.cpp'; then $(CYGPATH_W) '$(UTILDIR)/qcn_signal.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/qcn_signal.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-qcn_signal.Tpo $(DEPDIR)/qcn-qcn_signal.Po
#	$(AM_V_CXX)source='$(UTILDIR)/qcn_signal.cpp' object='qcn-qcn_signal.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-qcn_signal.obj `if test -f '$(UTILDIR)/qcn_signal.cpp'; then $(CYGPATH_W) '$(UTILDIR)/qcn_signal.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/qcn_signal.cpp'; fi`

qcn-cserialize.o: $(UTILDIR)/cserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-cserialize.o -MD -MP -MF $(DEPDIR)/qcn-cserialize.Tpo -c -o qcn-cserialize.o `test -f '$(UTILDIR)/cserialize.cpp' || echo '$(srcdir)/'`$(UTILDIR)/cserialize.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-cserialize.Tpo $(DEPDIR)/qcn-cserialize.Po
#	$(AM_V_CXX)source='$(UTILDIR)/cserialize.cpp' object='qcn-cserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-cserialize.o `test -f '$(UTILDIR)/cserialize.cpp' || echo '$(srcdir)/'`$(UTILDIR)/cserialize.cpp

qcn-cserialize.obj: $(UTILDIR)/cserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-cserialize.obj -MD -MP -MF $(DEPDIR)/qcn-cserialize.Tpo -c -o qcn-cserialize.obj `if test -f '$(UTILDIR)/cserialize.cpp'; then $(CYGPATH_W) '$(UTILDIR)/cserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/cserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-cserialize.Tpo $(DEPDIR)/qcn-cserialize.Po
#	$(AM_V_CXX)source='$(UTILDIR)/cserialize.cpp' object='qcn-cserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-cserialize.obj `if test -f '$(UTILDIR)/cserialize.cpp'; then $(CYGPATH_W) '$(UTILDIR)/cserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/cserialize.cpp'; fi`

qcn-gzstream.o: $(UTILDIR)/gzstream.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-gzstream.o -MD -MP -MF $(DEPDIR)/qcn-gzstream.Tpo -c -o qcn-gzstream.o `test -f '$(UTILDIR)/gzstream.cpp' || echo '$(srcdir)/'`$(UTILDIR)/gzstream.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-gzstream.Tpo $(DEPDIR)/qcn-gzstream.Po
#	$(AM_V_CXX)source='$(UTILDIR)/gzstream.cpp' object='qcn-gzstream.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-gzstream.o `test -f '$(UTILDIR)/gzstream.cpp' || echo '$(srcdir)/'`$(UTILDIR)/gzstream.cpp

qcn-gzstream.obj: $(UTILDIR)/gzstream.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-gzstream.obj -MD -MP -MF $(DEPDIR)/qcn-gzstream.Tpo -c -o qcn-gzstream.obj `if test -f '$(UTILDIR)/gzstream.cpp'; then $(CYGPATH_W) '$(UTILDIR)/gzstream.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/gzstream.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-gzstream.Tpo $(DEPDIR)/qcn-gzstream.Po
#	$(AM_V_CXX)source='$(UTILDIR)/gzstream.cpp' object='qcn-gzstream.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-gzstream.obj `if test -f '$(UTILDIR)/gzstream.cpp'; then $(CYGPATH_W) '$(UTILDIR)/gzstream.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/gzstream.cpp'; fi`

qcn-qcn_shmem.o: $(MAINDIR)/qcn_shmem.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-qcn_shmem.o -MD -MP -MF $(DEPDIR)/qcn-qcn_shmem.Tpo -c -o qcn-qcn_shmem.o `test -f '$(MAINDIR)/qcn_shmem.cpp' || echo '$(srcdir)/'`$(MAINDIR)/qcn_shmem.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-qcn_shmem.Tpo $(DEPDIR)/qcn-qcn_shmem.Po
#	$(AM_V_CXX)source='$(MAINDIR)/qcn_shmem.cpp' object='qcn-qcn_shmem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-qcn_shmem.o `test -f '$(MAINDIR)/qcn_shmem.cpp' || echo '$(srcdir)/'`$(MAINDIR)/qcn_shmem.cpp

qcn-qcn_shmem.obj: $(MAINDIR)/qcn_shmem.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-qcn_shmem.obj -MD -MP -MF $(DEPDIR)/qcn-qcn_shmem.Tpo -c -o qcn-qcn_shmem.obj `if test -f '$(MAINDIR)/qcn_shmem.cpp'; then $(CYGPATH_W) '$(MAINDIR)/qcn_shmem.cpp'; else $(CYGPATH_W) '$(srcdir)/$(MAINDIR)/qcn_shmem.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-qcn_shmem.Tpo $(DEPDIR)/qcn-qcn_shmem.Po
#	$(AM_V_CXX)source='$(MAINDIR)/qcn_shmem.cpp' object='qcn-qcn_shmem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-qcn_shmem.obj `if test -f '$(MAINDIR)/qcn_shmem.cpp'; then $(CYGPATH_W) '$(MAINDIR)/qcn_shmem.cpp'; else $(CYGPATH_W) '$(srcdir)/$(MAINDIR)/qcn_shmem.cpp'; fi`

qcn-csensor.o: $(SENSORDIR)/csensor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-csensor.o -MD -MP -MF $(DEPDIR)/qcn-csensor.Tpo -c -o qcn-csensor.o `test -f '$(SENSORDIR)/csensor.cpp' || echo '$(srcdir)/'`$(SENSORDIR)/csensor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-csensor.Tpo $(DEPDIR)/qcn-csensor.Po
#	$(AM_V_CXX)source='$(SENSORDIR)/csensor.cpp' object='qcn-csensor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-csensor.o `test -f '$(SENSORDIR)/csensor.cpp' || echo '$(srcdir)/'`$(SENSORDIR)/csensor.cpp

qcn-csensor.obj: $(SENSORDIR)/csensor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-csensor.obj -MD -MP -MF $(DEPDIR)/qcn-csensor.Tpo -c -o qcn-csensor.obj `if test -f '$(SENSORDIR)/csensor.cpp'; then $(CYGPATH_W) '$(SENSORDIR)/csensor.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SENSORDIR)/csensor.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-csensor.Tpo $(DEPDIR)/qcn-csensor.Po
#	$(AM_V_CXX)source='$(SENSORDIR)/csensor.cpp' object='qcn-csensor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-csensor.obj `if test -f '$(SENSORDIR)/csensor.cpp'; then $(CYGPATH_W) '$(SENSORDIR)/csensor.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SENSORDIR)/csensor.cpp'; fi`

qcn-texture.o: $(UTILDIR)/texture.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-texture.o -MD -MP -MF $(DEPDIR)/qcn-texture.Tpo -c -o qcn-texture.o `test -f '$(UTILDIR)/texture.cpp' || echo '$(srcdir)/'`$(UTILDIR)/texture.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-texture.Tpo $(DEPDIR)/qcn-texture.Po
#	$(AM_V_CXX)source='$(UTILDIR)/texture.cpp' object='qcn-texture.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-texture.o `test -f '$(UTILDIR)/texture.cpp' || echo '$(srcdir)/'`$(UTILDIR)/texture.cpp

qcn-texture.obj: $(UTILDIR)/texture.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-texture.obj -MD -MP -MF $(DEPDIR)/qcn-texture.Tpo -c -o qcn-texture.obj `if test -f '$(UTILDIR)/texture.cpp'; then $(CYGPATH_W) '$(UTILDIR)/texture.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/texture.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-texture.Tpo $(DEPDIR)/qcn-texture.Po
#	$(AM_V_CXX)source='$(UTILDIR)/texture.cpp' object='qcn-texture.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-texture.obj `if test -f '$(UTILDIR)/texture.cpp'; then $(CYGPATH_W) '$(UTILDIR)/texture.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/texture.cpp'; fi`
qcn-qcn_shmem_usb.o: $(QCNUSBDIR)/qcn_shmem_usb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-qcn_shmem_usb.o -MD -MP -MF $(DEPDIR)/qcn-qcn_shmem_usb.Tpo -c -o qcn-qcn_shmem_usb.o `test -f '$(QCNUSBDIR)/qcn_shmem_usb.cpp' || echo '$(srcdir)/'`$(QCNUSBDIR)/qcn_shmem_usb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-qcn_shmem_usb.Tpo $(DEPDIR)/qcn-qcn_shmem_usb.Po
#	$(AM_V_CXX)source='$(QCNUSBDIR)/qcn_shmem_usb.cpp' object='qcn-qcn_shmem_usb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-qcn_shmem_usb.o `test -f '$(QCNUSBDIR)/qcn_shmem_usb.cpp' || echo '$(srcdir)/'`$(QCNUSBDIR)/qcn_shmem_usb.cpp

qcn-qcn_shmem_usb.obj: $(QCNUSBDIR)/qcn_shmem_usb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-qcn_shmem_usb.obj -MD -MP -MF $(DEPDIR)/qcn-qcn_shmem_usb.Tpo -c -o qcn-qcn_shmem_usb.obj `if test -f '$(QCNUSBDIR)/qcn_shmem_usb.cpp'; then $(CYGPATH_W) '$(QCNUSBDIR)/qcn_shmem_usb.cpp'; else $(CYGPATH_W) '$(srcdir)/$(QCNUSBDIR)/qcn_shmem_usb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-qcn_shmem_usb.Tpo $(DEPDIR)/qcn-qcn_shmem_usb.Po
#	$(AM_V_CXX)source='$(QCNUSBDIR)/qcn_shmem_usb.cpp' object='qcn-qcn_shmem_usb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-qcn_shmem_usb.obj `if test -f '$(QCNUSBDIR)/qcn_shmem_usb.cpp'; then $(CYGPATH_W) '$(QCNUSBDIR)/qcn_shmem_usb.cpp'; else $(CYGPATH_W) '$(srcdir)/$(QCNUSBDIR)/qcn_shmem_usb.cpp'; fi`

qcn-qcn_thread_sensor.o: $(MAINDIR)/qcn_thread_sensor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-qcn_thread_sensor.o -MD -MP -MF $(DEPDIR)/qcn-qcn_thread_sensor.Tpo -c -o qcn-qcn_thread_sensor.o `test -f '$(MAINDIR)/qcn_thread_sensor.cpp' || echo '$(srcdir)/'`$(MAINDIR)/qcn_thread_sensor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-qcn_thread_sensor.Tpo $(DEPDIR)/qcn-qcn_thread_sensor.Po
#	$(AM_V_CXX)source='$(MAINDIR)/qcn_thread_sensor.cpp' object='qcn-qcn_thread_sensor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-qcn_thread_sensor.o `test -f '$(MAINDIR)/qcn_thread_sensor.cpp' || echo '$(srcdir)/'`$(MAINDIR)/qcn_thread_sensor.cpp

qcn-qcn_thread_sensor.obj: $(MAINDIR)/qcn_thread_sensor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-qcn_thread_sensor.obj -MD -MP -MF $(DEPDIR)/qcn-qcn_thread_sensor.Tpo -c -o qcn-qcn_thread_sensor.obj `if test -f '$(MAINDIR)/qcn_thread_sensor.cpp'; then $(CYGPATH_W) '$(MAINDIR)/qcn_thread_sensor.cpp'; else $(CYGPATH_W) '$(srcdir)/$(MAINDIR)/qcn_thread_sensor.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-qcn_thread_sensor.Tpo $(DEPDIR)/qcn-qcn_thread_sensor.Po
#	$(AM_V_CXX)source='$(MAINDIR)/qcn_thread_sensor.cpp' object='qcn-qcn_thread_sensor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-qcn_thread_sensor.obj `if test -f '$(MAINDIR)/qcn_thread_sensor.cpp'; then $(CYGPATH_W) '$(MAINDIR)/qcn_thread_sensor.cpp'; else $(CYGPATH_W) '$(srcdir)/$(MAINDIR)/qcn_thread_sensor.cpp'; fi`

qcn-qcn_thread_sensor_util.o: $(MAINDIR)/qcn_thread_sensor_util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-qcn_thread_sensor_util.o -MD -MP -MF $(DEPDIR)/qcn-qcn_thread_sensor_util.Tpo -c -o qcn-qcn_thread_sensor_util.o `test -f '$(MAINDIR)/qcn_thread_sensor_util.cpp' || echo '$(srcdir)/'`$(MAINDIR)/qcn_thread_sensor_util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-qcn_thread_sensor_util.Tpo $(DEPDIR)/qcn-qcn_thread_sensor_util.Po
#	$(AM_V_CXX)source='$(MAINDIR)/qcn_thread_sensor_util.cpp' object='qcn-qcn_thread_sensor_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-qcn_thread_sensor_util.o `test -f '$(MAINDIR)/qcn_thread_sensor_util.cpp' || echo '$(srcdir)/'`$(MAINDIR)/qcn_thread_sensor_util.cpp

qcn-qcn_thread_sensor_util.obj: $(MAINDIR)/qcn_thread_sensor_util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-qcn_thread_sensor_util.obj -MD -MP -MF $(DEPDIR)/qcn-qcn_thread_sensor_util.Tpo -c -o qcn-qcn_thread_sensor_util.obj `if test -f '$(MAINDIR)/qcn_thread_sensor_util.cpp'; then $(CYGPATH_W) '$(MAINDIR)/qcn_thread_sensor_util.cpp'; else $(CYGPATH_W) '$(srcdir)/$(MAINDIR)/qcn_thread_sensor_util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-qcn_thread_sensor_util.Tpo $(DEPDIR)/qcn-qcn_thread_sensor_util.Po
#	$(AM_V_CXX)source='$(MAINDIR)/qcn_thread_sensor_util.cpp' object='qcn-qcn_thread_sensor_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-qcn_thread_sensor_util.obj `if test -f '$(MAINDIR)/qcn_thread_sensor_util.cpp'; then $(CYGPATH_W) '$(MAINDIR)/qcn_thread_sensor_util.cpp'; else $(CYGPATH_W) '$(srcdir)/$(MAINDIR)/qcn_thread_sensor_util.cpp'; fi`

qcn-qcn_thread_sensor_loop.o: $(MAINDIR)/qcn_thread_sensor_loop.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-qcn_thread_sensor_loop.o -MD -MP -MF $(DEPDIR)/qcn-qcn_thread_sensor_loop.Tpo -c -o qcn-qcn_thread_sensor_loop.o `test -f '$(MAINDIR)/qcn_thread_sensor_loop.cpp' || echo '$(srcdir)/'`$(MAINDIR)/qcn_thread_sensor_loop.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-qcn_thread_sensor_loop.Tpo $(DEPDIR)/qcn-qcn_thread_sensor_loop.Po
#	$(AM_V_CXX)source='$(MAINDIR)/qcn_thread_sensor_loop.cpp' object='qcn-qcn_thread_sensor_loop.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-qcn_thread_sensor_loop.o `test -f '$(MAINDIR)/qcn_thread_sensor_loop.cpp' || echo '$(srcdir)/'`$(MAINDIR)/qcn_thread_sensor_loop.cpp

qcn-qcn_thread_sensor_loop.obj: $(MAINDIR)/qcn_thread_sensor_loop.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-qcn_thread_sensor_loop.obj -MD -MP -MF $(DEPDIR)/qcn-qcn_thread_sensor_loop.Tpo -c -o qcn-qcn_thread_sensor_loop.obj `if test -f '$(MAINDIR)/qcn_thread_sensor_loop.cpp'; then $(CYGPATH_W) '$(MAINDIR)/qcn_thread_sensor_loop.cpp'; else $(CYGPATH_W) '$(srcdir)/$(MAINDIR)/qcn_thread_sensor_loop.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-qcn_thread_sensor_loop.Tpo $(DEPDIR)/qcn-qcn_thread_sensor_loop.Po
#	$(AM_V_CXX)source='$(MAINDIR)/qcn_thread_sensor_loop.cpp' object='qcn-qcn_thread_sensor_loop.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-qcn_thread_sensor_loop.obj `if test -f '$(MAINDIR)/qcn_thread_sensor_loop.cpp'; then $(CYGPATH_W) '$(MAINDIR)/qcn_thread_sensor_loop.cpp'; else $(CYGPATH_W) '$(srcdir)/$(MAINDIR)/qcn_thread_sensor_loop.cpp'; fi`

qcn-qcn_thread_time.o: $(MAINDIR)/qcn_thread_time.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-qcn_thread_time.o -MD -MP -MF $(DEPDIR)/qcn-qcn_thread_time.Tpo -c -o qcn-qcn_thread_time.o `test -f '$(MAINDIR)/qcn_thread_time.cpp' || echo '$(srcdir)/'`$(MAINDIR)/qcn_thread_time.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-qcn_thread_time.Tpo $(DEPDIR)/qcn-qcn_thread_time.Po
#	$(AM_V_CXX)source='$(MAINDIR)/qcn_thread_time.cpp' object='qcn-qcn_thread_time.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-qcn_thread_time.o `test -f '$(MAINDIR)/qcn_thread_time.cpp' || echo '$(srcdir)/'`$(MAINDIR)/qcn_thread_time.cpp

qcn-qcn_thread_time.obj: $(MAINDIR)/qcn_thread_time.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-qcn_thread_time.obj -MD -MP -MF $(DEPDIR)/qcn-qcn_thread_time.Tpo -c -o qcn-qcn_thread_time.obj `if test -f '$(MAINDIR)/qcn_thread_time.cpp'; then $(CYGPATH_W) '$(MAINDIR)/qcn_thread_time.cpp'; else $(CYGPATH_W) '$(srcdir)/$(MAINDIR)/qcn_thread_time.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-qcn_thread_time.Tpo $(DEPDIR)/qcn-qcn_thread_time.Po
#	$(AM_V_CXX)source='$(MAINDIR)/qcn_thread_time.cpp' object='qcn-qcn_thread_time.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-qcn_thread_time.obj `if test -f '$(MAINDIR)/qcn_thread_time.cpp'; then $(CYGPATH_W) '$(MAINDIR)/qcn_thread_time.cpp'; else $(CYGPATH_W) '$(srcdir)/$(MAINDIR)/qcn_thread_time.cpp'; fi`

qcn-main.o: $(MAINDIR)/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-main.o -MD -MP -MF $(DEPDIR)/qcn-main.Tpo -c -o qcn-main.o `test -f '$(MAINDIR)/main.cpp' || echo '$(srcdir)/'`$(MAINDIR)/main.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-main.Tpo $(DEPDIR)/qcn-main.Po
#	$(AM_V_CXX)source='$(MAINDIR)/main.cpp' object='qcn-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-main.o `test -f '$(MAINDIR)/main.cpp' || echo '$(srcdir)/'`$(MAINDIR)/main.cpp

qcn-main.obj: $(MAINDIR)/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcn-main.obj -MD -MP -MF $(DEPDIR)/qcn-main.Tpo -c -o qcn-main.obj `if test -f '$(MAINDIR)/main.cpp'; then $(CYGPATH_W) '$(MAINDIR)/main.cpp'; else $(CYGPATH_W) '$(srcdir)/$(MAINDIR)/main.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcn-main.Tpo $(DEPDIR)/qcn-main.Po
#	$(AM_V_CXX)source='$(MAINDIR)/main.cpp' object='qcn-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcn-main.obj `if test -f '$(MAINDIR)/main.cpp'; then $(CYGPATH_W) '$(MAINDIR)/main.cpp'; else $(CYGPATH_W) '$(srcdir)/$(MAINDIR)/main.cpp'; fi`

qcndemo-qcn_thread.o: $(UTILDIR)/qcn_thread.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcndemo-qcn_thread.o -MD -MP -MF $(DEPDIR)/qcndemo-qcn_thread.Tpo -c -o qcndemo-qcn_thread.o `test -f '$(UTILDIR)/qcn_thread.cpp' || echo '$(srcdir)/'`$(UTILDIR)/qcn_thread.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcndemo-qcn_thread.Tpo $(DEPDIR)/qcndemo-qcn_thread.Po
#	$(AM_V_CXX)source='$(UTILDIR)/qcn_thread.cpp' object='qcndemo-qcn_thread.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcndemo-qcn_thread.o `test -f '$(UTILDIR)/qcn_thread.cpp' || echo '$(srcdir)/'`$(UTILDIR)/qcn_thread.cpp

qcndemo-qcn_thread.obj: $(UTILDIR)/qcn_thread.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcndemo-qcn_thread.obj -MD -MP -MF $(DEPDIR)/qcndemo-qcn_thread.Tpo -c -o qcndemo-qcn_thread.obj `if test -f '$(UTILDIR)/qcn_thread.cpp'; then $(CYGPATH_W) '$(UTILDIR)/qcn_thread.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/qcn_thread.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcndemo-qcn_thread.Tpo $(DEPDIR)/qcndemo-qcn_thread.Po
#	$(AM_V_CXX)source='$(UTILDIR)/qcn_thread.cpp' object='qcndemo-qcn_thread.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcndemo-qcn_thread.obj `if test -f '$(UTILDIR)/qcn_thread.cpp'; then $(CYGPATH_W) '$(UTILDIR)/qcn_thread.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/qcn_thread.cpp'; fi`

qcndemo-qcn_util.o: $(UTILDIR)/qcn_util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcndemo-qcn_util.o -MD -MP -MF $(DEPDIR)/qcndemo-qcn_util.Tpo -c -o qcndemo-qcn_util.o `test -f '$(UTILDIR)/qcn_util.cpp' || echo '$(srcdir)/'`$(UTILDIR)/qcn_util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcndemo-qcn_util.Tpo $(DEPDIR)/qcndemo-qcn_util.Po
#	$(AM_V_CXX)source='$(UTILDIR)/qcn_util.cpp' object='qcndemo-qcn_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcndemo-qcn_util.o `test -f '$(UTILDIR)/qcn_util.cpp' || echo '$(srcdir)/'`$(UTILDIR)/qcn_util.cpp

qcndemo-qcn_util.obj: $(UTILDIR)/qcn_util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcndemo-qcn_util.obj -MD -MP -MF $(DEPDIR)/qcndemo-qcn_util.Tpo -c -o qcndemo-qcn_util.obj `if test -f '$(UTILDIR)/qcn_util.cpp'; then $(CYGPATH_W) '$(UTILDIR)/qcn_util.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/qcn_util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcndemo-qcn_util.Tpo $(DEPDIR)/qcndemo-qcn_util.Po
#	$(AM_V_CXX)source='$(UTILDIR)/qcn_util.cpp' object='qcndemo-qcn_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcndemo-qcn_util.obj `if test -f '$(UTILDIR)/qcn_util.cpp'; then $(CYGPATH_W) '$(UTILDIR)/qcn_util.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/qcn_util.cpp'; fi`

qcndemo-qcn_signal.o: $(UTILDIR)/qcn_signal.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcndemo-qcn_signal.o -MD -MP -MF $(DEPDIR)/qcndemo-qcn_signal.Tpo -c -o qcndemo-qcn_signal.o `test -f '$(UTILDIR)/qcn_signal.cpp' || echo '$(srcdir)/'`$(UTILDIR)/qcn_signal.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcndemo-qcn_signal.Tpo $(DEPDIR)/qcndemo-qcn_signal.Po
#	$(AM_V_CXX)source='$(UTILDIR)/qcn_signal.cpp' object='qcndemo-qcn_signal.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcndemo-qcn_signal.o `test -f '$(UTILDIR)/qcn_signal.cpp' || echo '$(srcdir)/'`$(UTILDIR)/qcn_signal.cpp

qcndemo-qcn_signal.obj: $(UTILDIR)/qcn_signal.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcndemo-qcn_signal.obj -MD -MP -MF $(DEPDIR)/qcndemo-qcn_signal.Tpo -c -o qcndemo-qcn_signal.obj `if test -f '$(UTILDIR)/qcn_signal.cpp'; then $(CYGPATH_W) '$(UTILDIR)/qcn_signal.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/qcn_signal.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcndemo-qcn_signal.Tpo $(DEPDIR)/qcndemo-qcn_signal.Po
#	$(AM_V_CXX)source='$(UTILDIR)/qcn_signal.cpp' object='qcndemo-qcn_signal.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcndemo-qcn_signal.obj `if test -f '$(UTILDIR)/qcn_signal.cpp'; then $(CYGPATH_W) '$(UTILDIR)/qcn_signal.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/qcn_signal.cpp'; fi`

qcndemo-cserialize.o: $(UTILDIR)/cserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcndemo-cserialize.o -MD -MP -MF $(DEPDIR)/qcndemo-cserialize.Tpo -c -o qcndemo-cserialize.o `test -f '$(UTILDIR)/cserialize.cpp' || echo '$(srcdir)/'`$(UTILDIR)/cserialize.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcndemo-cserialize.Tpo $(DEPDIR)/qcndemo-cserialize.Po
#	$(AM_V_CXX)source='$(UTILDIR)/cserialize.cpp' object='qcndemo-cserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcndemo-cserialize.o `test -f '$(UTILDIR)/cserialize.cpp' || echo '$(srcdir)/'`$(UTILDIR)/cserialize.cpp

qcndemo-cserialize.obj: $(UTILDIR)/cserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcndemo-cserialize.obj -MD -MP -MF $(DEPDIR)/qcndemo-cserialize.Tpo -c -o qcndemo-cserialize.obj `if test -f '$(UTILDIR)/cserialize.cpp'; then $(CYGPATH_W) '$(UTILDIR)/cserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/cserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcndemo-cserialize.Tpo $(DEPDIR)/qcndemo-cserialize.Po
#	$(AM_V_CXX)source='$(UTILDIR)/cserialize.cpp' object='qcndemo-cserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcndemo-cserialize.obj `if test -f '$(UTILDIR)/cserialize.cpp'; then $(CYGPATH_W) '$(UTILDIR)/cserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/cserialize.cpp'; fi`

qcndemo-gzstream.o: $(UTILDIR)/gzstream.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcndemo-gzstream.o -MD -MP -MF $(DEPDIR)/qcndemo-gzstream.Tpo -c -o qcndemo-gzstream.o `test -f '$(UTILDIR)/gzstream.cpp' || echo '$(srcdir)/'`$(UTILDIR)/gzstream.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcndemo-gzstream.Tpo $(DEPDIR)/qcndemo-gzstream.Po
#	$(AM_V_CXX)source='$(UTILDIR)/gzstream.cpp' object='qcndemo-gzstream.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcndemo-gzstream.o `test -f '$(UTILDIR)/gzstream.cpp' || echo '$(srcdir)/'`$(UTILDIR)/gzstream.cpp

qcndemo-gzstream.obj: $(UTILDIR)/gzstream.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcndemo-gzstream.obj -MD -MP -MF $(DEPDIR)/qcndemo-gzstream.Tpo -c -o qcndemo-gzstream.obj `if test -f '$(UTILDIR)/gzstream.cpp'; then $(CYGPATH_W) '$(UTILDIR)/gzstream.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/gzstream.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcndemo-gzstream.Tpo $(DEPDIR)/qcndemo-gzstream.Po
#	$(AM_V_CXX)source='$(UTILDIR)/gzstream.cpp' object='qcndemo-gzstream.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcndemo-gzstream.obj `if test -f '$(UTILDIR)/gzstream.cpp'; then $(CYGPATH_W) '$(UTILDIR)/gzstream.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/gzstream.cpp'; fi`

qcndemo-md5.o: $(UTILDIR)/md5.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcndemo-md5.o -MD -MP -MF $(DEPDIR)/qcndemo-md5.Tpo -c -o qcndemo-md5.o `test -f '$(UTILDIR)/md5.cpp' || echo '$(srcdir)/'`$(UTILDIR)/md5.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcndemo-md5.Tpo $(DEPDIR)/qcndemo-md5.Po
#	$(AM_V_CXX)source='$(UTILDIR)/md5.cpp' object='qcndemo-md5.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcndemo-md5.o `test -f '$(UTILDIR)/md5.cpp' || echo '$(srcdir)/'`$(UTILDIR)/md5.cpp

qcndemo-md5.obj: $(UTILDIR)/md5.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcndemo-md5.obj -MD -MP -MF $(DEPDIR)/qcndemo-md5.Tpo -c -o qcndemo-md5.obj `if test -f '$(UTILDIR)/md5.cpp'; then $(CYGPATH_W) '$(UTILDIR)/md5.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/md5.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcndemo-md5.Tpo $(DEPDIR)/qcndemo-md5.Po
#	$(AM_V_CXX)source='$(UTILDIR)/md5.cpp' object='qcndemo-md5.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcndemo-md5.obj `if test -f '$(UTILDIR)/md5.cpp'; then $(CYGPATH_W) '$(UTILDIR)/md5.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTILDIR)/md5.cpp'; fi`

qcndemo-qcn_shmem.o: $(MAINDIR)/qcn_shmem.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcndemo-qcn_shmem.o -MD -MP -MF $(DEPDIR)/qcndemo-qcn_shmem.Tpo -c -o qcndemo-qcn_shmem.o `test -f '$(MAINDIR)/qcn_shmem.cpp' || echo '$(srcdir)/'`$(MAINDIR)/qcn_shmem.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcndemo-qcn_shmem.Tpo $(DEPDIR)/qcndemo-qcn_shmem.Po
#	$(AM_V_CXX)source='$(MAINDIR)/qcn_shmem.cpp' object='qcndemo-qcn_shmem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcndemo-qcn_shmem.o `test -f '$(MAINDIR)/qcn_shmem.cpp' || echo '$(srcdir)/'`$(MAINDIR)/qcn_shmem.cpp

qcndemo-qcn_shmem.obj: $(MAINDIR)/qcn_shmem.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcndemo-qcn_shmem.obj -MD -MP -MF $(DEPDIR)/qcndemo-qcn_shmem.Tpo -c -o qcndemo-qcn_shmem.obj `if test -f '$(MAINDIR)/qcn_shmem.cpp'; then $(CYGPATH_W) '$(MAINDIR)/qcn_shmem.cpp'; else $(CYGPATH_W) '$(srcdir)/$(MAINDIR)/qcn_shmem.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcndemo-qcn_shmem.Tpo $(DEPDIR)/qcndemo-qcn_shmem.Po
#	$(AM_V_CXX)source='$(MAINDIR)/qcn_shmem.cpp' object='qcndemo-qcn_shmem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcndemo-qcn_shmem.obj `if test -f '$(MAINDIR)/qcn_shmem.cpp'; then $(CYGPATH_W) '$(MAINDIR)/qcn_shmem.cpp'; else $(CYGPATH_W) '$(srcdir)/$(MAINDIR)/qcn_shmem.cpp'; fi`

qcndemo-qcndemo.o: $(MAINDIR)/qcndemo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcndemo-qcndemo.o -MD -MP -MF $(DEPDIR)/qcndemo-qcndemo.Tpo -c -o qcndemo-qcndemo.o `test -f '$(MAINDIR)/qcndemo.cpp' || echo '$(srcdir)/'`$(MAINDIR)/qcndemo.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcndemo-qcndemo.Tpo $(DEPDIR)/qcndemo-qcndemo.Po
#	$(AM_V_CXX)source='$(MAINDIR)/qcndemo.cpp' object='qcndemo-qcndemo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcndemo-qcndemo.o `test -f '$(MAINDIR)/qcndemo.cpp' || echo '$(srcdir)/'`$(MAINDIR)/qcndemo.cpp

qcndemo-qcndemo.obj: $(MAINDIR)/qcndemo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qcndemo-qcndemo.obj -MD -MP -MF $(DEPDIR)/qcndemo-qcndemo.Tpo -c -o qcndemo-qcndemo.obj `if test -f '$(MAINDIR)/qcndemo.cpp'; then $(CYGPATH_W) '$(MAINDIR)/qcndemo.cpp'; else $(CYGPATH_W) '$(srcdir)/$(MAINDIR)/qcndemo.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qcndemo-qcndemo.Tpo $(DEPDIR)/qcndemo-qcndemo.Po
#	$(AM_V_CXX)source='$(MAINDIR)/qcndemo.cpp' object='qcndemo-qcndemo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qcndemo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qcndemo-qcndemo.obj `if test -f '$(MAINDIR)/qcndemo.cpp'; then $(CYGPATH_W) '$(MAINDIR)/qcndemo.cpp'; else $(CYGPATH_W) '$(srcdir)/$(MAINDIR)/qcndemo.cpp'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) all-local
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-local mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am all-local check check-am clean \
	clean-binPROGRAMS clean-generic clean-local cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS


client-bin: qcn

#NTPBASEDIR = $(BASEDIR)/ntp-4.2.4p5
#LIBNTPDIR        = $(NTPBASEDIR)/libntp
#NTPINCLUDEDIR    = $(NTPBASEDIR)/include
#NTPDATEDIR       = $(NTPBASEDIR)/ntpdate

#   #  also note need to have the following settings in environment for Leopard and higher OS X (i.e. >=10.5)
#   # DEVELOPER_SDK_DIR=/Developer/SDKs
#   # LDFLAGS="-isysroot /Developer/SDKs/MacOSX10.4u.sdk -Wl,-syslibroot,/Developer/SDKs/MacOSX10.4u.sdk -arch i386"
#   # CPPFLAGS="-I/usr/include -I/usr/local/include -isysroot /Developer/SDKs/MacOSX10.4u.sdk -arch i386"
#   # CFLAGS="-I/usr/include -I/usr/local/include -isysroot /Developer/SDKs/MacOSX10.4u.sdk -arch i386"
#   # CXXFLAGS="-I/usr/include -I/usr/local/include -isysroot /Developer/SDKs/MacOSX10.4u.sdk -arch i386"
#   # SDKROOT="/Developer/SDKs/MacOSX10.4u.sdk"
#   # MACOSX_DEPLOYMENT_TARGET=10.4
#   # export DEVELOPER_SDK_DIR LDFLAGS CPPFLAGS CFLAGS CXXFLAGS SDKROOT MACOSX_DEPLOYMENT_TARGET
#   # LIBS += -Wl,-stack_size -Wl,2000000 -framework IOKit -framework Foundation -framework ScreenSaver -framework Carbon -framework Cocoa
#   # LIBS +=  -L$(LIBNTPDIR) -lntp -ldl $(BOINC_LIB)
#   # UTIL_CPP = $(UTILDIR)/qcn_util.cpp $(UTILDIR)/qcn_semaphore.cpp
   # must be Linux because I'm sure not using autoconf on Windows! ;-)

           #$(UTILDIR)/qcn_ntpdate.c 

.PHONY: moveover

all-local: client-bin qcndemo moveover 

moveover:
	mv qcn $(BINARY)
	$(STRIP) $(BINARY)
	mkdir -p $(top_srcdir)/client/test/projects/qcn.edu_qcn
	mv $(BINARY) $(top_srcdir)/client/bin/
	cp $(top_srcdir)/client/bin/$(BINARY) $(top_srcdir)/client/test/projects/qcn.edu_qcn/
	$(STRIP) qcndemo
	mv qcndemo ../test/

#EXTRA_DIST = *.h \
#    mac \
#    translation \
#    win
#
clean-local:
	rm -f qcn $(BINARY) ../test/qcndemo $(top_srcdir)/client/bin/*qcn_* $(top_srcdir)/client/test/projects/qcn.edu_qcn/*qcn_* 

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
